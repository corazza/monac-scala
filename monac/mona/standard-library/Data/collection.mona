module Data.Collection (
    Iterable(..),
    Seq(..)
)


/**
 * An iterable is a relationship between a collection and means of iteration over it.
 * 
 * Doesn't guarantee constant order of iteration, can only iterate in one direction.
 */
class Copy itt => Iterable col itt {
    size        : ref col a -> Int
    elem        : ref col a -> ref a -> Bool

    iterator    : ref col a -> itt a
    next        : itt a -> itt a
    hasNext     : itt a -> Bool
    get         : itt a -> ref a
}

/**
 * A sequence is a relationship between a collection and means of sequential iteration over it.
 * 
 * Guarantees constant order of iteration, can iterate backward and forward.
 */
class Iterable col itt => Seq col itt {
    ([])    : ref col a -> Int -> ref a
    length  : ref col a -> Int

    first   : ref col a -> itt a
    hasPrev : itt a -> Bool
    prev    : itt a -> itt a
    
    first   = iterator
    length  = size    
}

